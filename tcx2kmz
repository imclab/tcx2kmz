#!/usr/bin/python

from optparse import OptionParser
import sys

import kml
import kml.gx
from tcx import TCX


def main(argv):
    parser = OptionParser()
    parser.add_option('-c', '--color', metavar='COLOR')
    parser.add_option('-d', '--date', metavar='DATE')
    parser.add_option('-n', '--name', metavar='NAME')
    parser.add_option('-o', '--output', metavar='FILENAME')
    parser.add_option('-w', '--width', metavar='WIDTH', type=int)
    parser.set_defaults(color='ff0000ff')
    parser.set_defaults(width=3)
    options, args = parser.parse_args(argv[1:])
    document = kml.Document()
    schema = kml.Schema()
    schema.add(kml.gx.SimpleArrayField(displayName='Heart Rate').add_attrs(name='heart_rate', type='int'))
    document.add(schema)
    style = kml.Style()
    style.add(kml.LineStyle(color=options.color, width=options.width))
    style.add(kml.IconStyle(kml.Icon(href='http://earth.google.com/images/kml-icons/track-directional/track-0.png')))
    document.add(style)
    for arg in args:
        tcx = TCX.parse(open(arg))
        for activity in tcx.activities:
            if options.date and not activity.id.startswith(options.date):
                continue
            multi_track = kml.gx.MultiTrack()
            for lap in activity.laps:
                track = kml.gx.Track(altitudeMode='clampToGround')
                heart_rate = kml.gx.SimpleArrayData().add_attrs(name='heart_rate')
                for track_ in lap.tracks:
                    for trackpoint in track_:
                        if trackpoint.latitude_degrees and trackpoint.longitude_degrees:
                            track.add(kml.when(trackpoint.time))
                            track.add(kml.gx.coord((trackpoint.longitude_degrees, trackpoint.latitude_degrees, 0)))
                            heart_rate.add(kml.gx.value(trackpoint.heart_rate_bpm))
                track.add(kml.ExtendedData(kml.SchemaData(heart_rate).add_attrs(schemaUrl='#' + schema.id())))
                multi_track.add(track)
            if options.name:
                name = options.name
            else:
                name = '%s %s' % (activity.sport, activity.id)
            placemark = kml.Placemark(name=name, styleUrl='#' + style.id())
            placemark.add(multi_track)
            document.add(placemark)
    if options.output:
        output = open(options.output, 'w')
    else:
        output = sys.stdout
    kml.kml('2.2', {'gx': '2.2'}, document).pretty_write(output)


if __name__ == '__main__':
    main(sys.argv)
